/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.javaj2eefsd.workshop.api;

import com.javaj2eefsd.workshop.model.BankAccount;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-06-06T07:36:56.089+05:30")

@Api(value = "bankAccount", description = "the bankAccount API")
public interface BankAccountApi {

    @ApiOperation(value = "Create new bank account", nickname = "addBankAccount", notes = "Creates new bank account", authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "bankAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/bankAccount/new",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> addBankAccount(@ApiParam(value = "Bank Account object that needs to be added to the store" ,required=true )  @Valid @RequestBody BankAccount body);


    @ApiOperation(value = "Deletes a bank account", nickname = "deleteBankAccount", notes = "Deletes the bank account", authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "bankAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Bank Account not found") })
    @RequestMapping(value = "/bankAccount/delete",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteBankAccount(@ApiParam(value = "Bank Account id to delete",required=true) @PathVariable("bankAccountId") String bankAccountId);


    @ApiOperation(value = "Find Bank Account by ID", nickname = "getBankAccountById", notes = "Returns a single bank account", response = BankAccount.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "bankAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = BankAccount.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Bank Account not found") })
    @RequestMapping(value = "/bankAccount/{bankAccountId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BankAccount> getBankAccountById(@ApiParam(value = "ID of bank account to return",required=true) @PathVariable("bankAccountId") String bankAccountId);


    @ApiOperation(value = "bank accounts list", nickname = "getBankAccountsList", notes = "Returns the list of bank accounts", response = BankAccount.class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "bankAccount", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = BankAccount.class, responseContainer = "List") })
    @RequestMapping(value = "/bankAccount/all",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<BankAccount>> getBankAccountsList();

}
